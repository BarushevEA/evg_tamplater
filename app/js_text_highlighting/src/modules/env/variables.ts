import {CLASSIFICATION} from "./enums";

const KEY_WORDS: Record<string, CLASSIFICATION> = {
    "abstract": CLASSIFICATION.MODIFIER,
    "as": CLASSIFICATION.TYPE_ASSERTION,
    "async": CLASSIFICATION.MODIFIER,
    "await": CLASSIFICATION.CONTROL_FLOW,
    "boolean": CLASSIFICATION.PRIMITIVE_TYPE,
    "break": CLASSIFICATION.CONTROL_FLOW,
    "byte": CLASSIFICATION.PRIMITIVE_TYPE,
    "case": CLASSIFICATION.CONTROL_FLOW,
    "catch": CLASSIFICATION.CONTROL_FLOW,
    "char": CLASSIFICATION.PRIMITIVE_TYPE,
    "class": CLASSIFICATION.STRUCTURE,
    "const": CLASSIFICATION.DECLARATION,
    "continue": CLASSIFICATION.CONTROL_FLOW,
    "debugger": CLASSIFICATION.MISCELLANEOUS,
    "default": CLASSIFICATION.CONTROL_FLOW,
    "delete": CLASSIFICATION.OPERATOR,
    "do": CLASSIFICATION.CONTROL_FLOW,
    "double": CLASSIFICATION.PRIMITIVE_TYPE,
    "else": CLASSIFICATION.CONTROL_FLOW,
    "enum": CLASSIFICATION.STRUCTURE,
    "eval": CLASSIFICATION.MISCELLANEOUS,
    "export": CLASSIFICATION.MODULE,
    "extends": CLASSIFICATION.INHERITANCE,
    "false": CLASSIFICATION.BOOLEAN_VALUE,
    "final": CLASSIFICATION.MODIFIER,
    "finally": CLASSIFICATION.CONTROL_FLOW,
    "float": CLASSIFICATION.PRIMITIVE_TYPE,
    "for": CLASSIFICATION.CONTROL_FLOW,
    "function": CLASSIFICATION.STRUCTURE,
    "goto": CLASSIFICATION.CONTROL_FLOW,
    "if": CLASSIFICATION.CONTROL_FLOW,
    "implements": CLASSIFICATION.INTERFACE,
    "import": CLASSIFICATION.MODULE,
    "in": CLASSIFICATION.OPERATOR,
    "instanceof": CLASSIFICATION.OPERATOR,
    "int": CLASSIFICATION.PRIMITIVE_TYPE,
    "interface": CLASSIFICATION.INTERFACE,
    "let": CLASSIFICATION.DECLARATION,
    "long": CLASSIFICATION.PRIMITIVE_TYPE,
    "module": CLASSIFICATION.MODULE,
    "namespace": CLASSIFICATION.MODULE,
    "native": CLASSIFICATION.MODIFIER,
    "new": CLASSIFICATION.INSTANTIATION,
    "null": CLASSIFICATION.NULL_TYPE,
    "number": CLASSIFICATION.PRIMITIVE_TYPE,
    "object": CLASSIFICATION.PRIMITIVE_TYPE,
    "package": CLASSIFICATION.MODULE,
    "private": CLASSIFICATION.MODIFIER,
    "protected": CLASSIFICATION.MODIFIER,
    "public": CLASSIFICATION.MODIFIER,
    "readonly": CLASSIFICATION.MODIFIER,
    "require": CLASSIFICATION.MODULE,
    "return": CLASSIFICATION.CONTROL_FLOW,
    "set": CLASSIFICATION.ACCESSOR,
    "short": CLASSIFICATION.PRIMITIVE_TYPE,
    "static": CLASSIFICATION.MODIFIER,
    "string": CLASSIFICATION.PRIMITIVE_TYPE,
    "super": CLASSIFICATION.INHERITANCE,
    "switch": CLASSIFICATION.CONTROL_FLOW,
    "symbol": CLASSIFICATION.PRIMITIVE_TYPE,
    "synchronized": CLASSIFICATION.MODIFIER,
    "this": CLASSIFICATION.CONTEXT,
    "throw": CLASSIFICATION.CONTROL_FLOW,
    "throws": CLASSIFICATION.TYPE_ASSERTION,
    "transient": CLASSIFICATION.MODIFIER,
    "true": CLASSIFICATION.BOOLEAN_VALUE,
    "try": CLASSIFICATION.CONTROL_FLOW,
    "typeof": CLASSIFICATION.OPERATOR,
    "var": CLASSIFICATION.DECLARATION,
    "volatile": CLASSIFICATION.MODIFIER,
    "void": CLASSIFICATION.PRIMITIVE_TYPE,
    "while": CLASSIFICATION.CONTROL_FLOW,
    "with": CLASSIFICATION.MISCELLANEOUS,
    "yield": CLASSIFICATION.GENERATION,
    "undefined": CLASSIFICATION.PRIMITIVE_TYPE,
    "NaN": CLASSIFICATION.PRIMITIVE_TYPE,
    "Infinity": CLASSIFICATION.PRIMITIVE_TYPE
};

const TYPE_UTILITIES: Record<string, CLASSIFICATION> = {
    "Record": CLASSIFICATION.TYPE_UTIL,
    "Partial": CLASSIFICATION.TYPE_UTIL,
    "Readonly": CLASSIFICATION.TYPE_UTIL,
    "Pick": CLASSIFICATION.TYPE_UTIL,
    "Exclude": CLASSIFICATION.TYPE_UTIL,
    "Omit": CLASSIFICATION.TYPE_UTIL
};

const DELIMITERS: Record<string, CLASSIFICATION> = {
    "(": CLASSIFICATION.DELIMITER,
    ")": CLASSIFICATION.DELIMITER,
    "[": CLASSIFICATION.DELIMITER,
    "]": CLASSIFICATION.DELIMITER,
    "{": CLASSIFICATION.DELIMITER,
    "}": CLASSIFICATION.DELIMITER,
    ";": CLASSIFICATION.DELIMITER,
    ",": CLASSIFICATION.DELIMITER,
    ".": CLASSIFICATION.DELIMITER,
};

const SPECIAL_CHARACTERS: Record<string, CLASSIFICATION> = {
    "!": CLASSIFICATION.SPECIAL_CHARACTER,
    "@": CLASSIFICATION.SPECIAL_CHARACTER,
    "#": CLASSIFICATION.SPECIAL_CHARACTER,
    "$": CLASSIFICATION.SPECIAL_CHARACTER,
    "%": CLASSIFICATION.SPECIAL_CHARACTER,
    "^": CLASSIFICATION.SPECIAL_CHARACTER,
    "&": CLASSIFICATION.SPECIAL_CHARACTER,
    "*": CLASSIFICATION.SPECIAL_CHARACTER,
    "_": CLASSIFICATION.SPECIAL_CHARACTER,
    "+": CLASSIFICATION.SPECIAL_CHARACTER,
    "-": CLASSIFICATION.SPECIAL_CHARACTER,
    "=": CLASSIFICATION.SPECIAL_CHARACTER,
    "~": CLASSIFICATION.SPECIAL_CHARACTER,
    "`": CLASSIFICATION.SPECIAL_CHARACTER,
    "|": CLASSIFICATION.SPECIAL_CHARACTER,
    "<": CLASSIFICATION.SPECIAL_CHARACTER,
    ">": CLASSIFICATION.SPECIAL_CHARACTER,
    "?": CLASSIFICATION.SPECIAL_CHARACTER,
    "/": CLASSIFICATION.SPECIAL_CHARACTER,
    "\\": CLASSIFICATION.SPECIAL_CHARACTER,
    "\"": CLASSIFICATION.SPECIAL_CHARACTER,
};
